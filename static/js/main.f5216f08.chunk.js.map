{"version":3,"sources":["graph.ts","graphV2.ts","renderer.js","renderers/DocumentRenderer.tsx","renderers/addressDetails.tsx","renderers/StudentRenderer.tsx","renderers/MemberRenderer.tsx","renderers/MissionRenderer.tsx","renderers/Validation.tsx","renderers/DocumentTypeRenderer.tsx","renderers/ValidationTypeRenderer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isPointer","s","Graph","rules","graph","nodes","links","groups","this","name","keys","Object","includes","newNumber","length","source","target","push","value","group","data","id","getGroupNumberForName","objs","nodeToRemove","forEach","k1","obj","currentType","REPO_TOKEN","k","val","newKey","slice","targetType","settingsForThis","newLink","Array","isArray","i","newNode","filter","n","g","addData","CSS2DObject","element","document","createElement","style","position","addEventListener","traverse","object","Element","parentNode","removeChild","recursive","cloneNode","THREE","prototype","isCSS2DObject","_vector","_viewMatrix","_viewProjectionMatrix","_a","_b","DocumentRenderer","Card","CardHeader","title","subheader","type","CardContent","signedAt","AdressDetails","address","city","zipCode","Typography","StudentRendere","student","firstName","lastName","MemberRenderer","props","member","MissionRenderer","mission","description","ValidationRenderer","validation","comment","DocumentTypeRenderer","documentType","subValue","extension","referencePattern","signature","ValidationTypeRenderer","validationType","role","mailAlias","extraRenderers","_width","_height","_widthHalf","_heightHalf","_this","cache","objects","WeakMap","domElement","renderObject","scene","camera","onBeforeRender","setFromMatrixPosition","matrixWorld","applyMatrix4","test","navigator","vendor","transform","Math","round","x","y","display","visible","z","objectData","distanceToCameraSquared","getDistanceToSquared","set","appendChild","onAfterRender","l","children","object1","object2","distanceToSquared","overflow","getSize","width","height","render","autoUpdate","updateMatrixWorld","parent","copy","matrixWorldInverse","multiplyMatrices","projectionMatrix","sorted","result","filterAndFlatten","sort","a","b","get","zMax","zIndex","zOrder","setSize","e","DATA","of","missionOrigins","App","d","getData","console","log","fgRef","useRef","useEffect","current","cameraPosition","angle","setInterval","sin","cos","PI","ref","nodeLabel","elem","comp","getHoverRenderer","ReactDOMServer","renderToStaticMarkup","JSON","stringify","graphData","nodeAutoColorBy","nodeThreeObjectExtend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"8PAKaA,EAAY,SAACC,GAAD,MAAoC,kBAANA,GAJ1B,MAI4CA,EAAE,ICDtDC,E,WAOjB,WAAYC,GAAa,yBANzBC,WAMwB,OALxBC,WAKwB,OAJxBC,WAIwB,OAHhBH,WAGgB,OADhBI,YACgB,EACpBC,KAAKJ,MAAQ,GACbI,KAAKH,MAAQ,GACbG,KAAKF,MAAQ,GACbE,KAAKD,OAAS,GACdC,KAAKL,MAAQA,E,2CAGjB,WACI,MAAO,CACHG,MAAOE,KAAKF,MACZD,MAAOG,KAAKH,S,mCAUpB,SAA8BI,GAC1B,IAAMC,EAAOC,OAAOD,KAAKF,KAAKD,QAC9B,GAAIG,EAAKE,SAASH,GACd,OAAOD,KAAKD,OAAOE,GAEnB,IAAMI,EAAYH,EAAKI,OAAS,EAEhC,OADAN,KAAKD,OAAOE,GAAQI,EACbA,I,qBAIf,SAAgBE,EAAgBC,GAC5BR,KAAKF,MAAMW,KAAK,CAAEF,SAAQC,SAAQE,MAAO,M,qBAG7C,SAAgBT,EAAcU,EAAeC,GACzCZ,KAAKH,MAAMY,KAAK,CAAEI,GAAIZ,EAAMU,MAAOX,KAAKc,sBAAsBH,GAAQC,W,qBAI1E,SAAeG,GAAY,IAAD,OAChBC,EAAyB,GAC/Bb,OAAOD,KAAKa,GAAME,SAAQ,SAAAC,GACtB,IAAMC,EAAMJ,EAAKG,GACXE,EAAcD,EAAIE,QACxBlB,OAAOD,KAAKiB,GAAKF,SAAQ,SAAAK,GACrB,IAAMC,EAAMJ,EAAIG,GAEhB,GAAI9B,EAAU8B,GAAI,CACd,IAAME,EAASF,EAAEG,MAAM,GAEvB,GAAmB,kBAARF,EAAkB,CACzB,IAAMf,EAASO,EAAKQ,GACdG,EAAalB,EAAOa,QAC1B,GAAIlB,OAAOD,KAAK,EAAKP,OAAOS,SAASgB,GAAc,CAC/C,IAAMO,EAAkB,EAAKhC,MAAMyB,GAGnC,GAAIjB,OAAOD,KAAKyB,GAAiBvB,SAASsB,GAEzB,YADAC,EAAgBD,KAEzBP,EAAIK,GAAUhB,EACdQ,EAAaP,KAAKc,UAEXJ,EAAIG,SAGfH,EAAIK,GAAUD,EACd,EAAKK,QAAQV,EAAIK,UACVJ,EAAIG,QAGfH,EAAIK,GAAUhB,EACd,EAAKoB,QAAQV,EAAIK,UACVJ,EAAIG,GAEf,OAGJ,GAAY,OAARC,EAGA,OAFAJ,EAAIK,GAAUD,cACPJ,EAAIG,GAIf,GAAIO,MAAMC,QAAQP,IAAQA,EAAIjB,OAG1B,OAFAiB,EAAIN,SAAQ,SAAAc,GAAC,OAAI,EAAKH,QAAQV,EAAIa,kBAC3BZ,EAAIG,OAMvB,EAAKU,QAAQd,EAAIC,EAAIE,QAAaF,MAEtCnB,KAAKH,MAAQG,KAAKH,MAAMoC,QAAO,SAAAC,GAAC,OAAKlB,EAAaZ,SAAS8B,EAAErB,U,iBAjFjE,SAAiBD,EAAWjB,GACxB,IAAMwC,EAAI,IAAIzC,EAAMC,GAAS,IAE7B,OADAwC,EAAEC,QAAQxB,GACHuB,M,wCC1BFE,EAAb,kDACI,WAAYC,GAAU,IAAD,8BACjB,gBACKA,QAAUA,GAAWC,SAASC,cAAc,OACjD,EAAKF,QAAQG,MAAMC,SAAW,WAC9B,EAAKC,iBAAiB,WAAW,WAC7B,EAAKC,UAAS,SAACC,GACPA,EAAOP,mBAAmBQ,SAAyC,OAA9BD,EAAOP,QAAQS,YACpDF,EAAOP,QAAQS,WAAWC,YAAYH,EAAOP,eAPxC,EADzB,wCAcI,SAAK/B,EAAQ0C,GAGT,OAFA,4DAAW1C,EAAQ0C,GACnBjD,KAAKsC,QAAU/B,EAAO+B,QAAQY,WAAU,GACjClD,SAjBf,GAAiCmD,KAsBjCd,EAAYe,UAAUC,eAAgB,EAEtC,IAAMC,EAAU,IAAIH,IACdI,EAAc,IAAIJ,IAClBK,EAAwB,IAAIL,IAC5BM,EAAK,IAAIN,IACTO,EAAK,IAAIP,I,2CCtBA,SAASQ,EAAT,GAAgD,IAApBpB,EAAmB,EAAnBA,SACvC,OACI,eAACqB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAO,aAAevB,EAAS1B,GAC/BkD,UAAWxB,EAASyB,KAAKtD,QAE7B,eAACuD,EAAA,EAAD,4BACgB1B,EAAS2B,e,YCRtB,SAASC,EAAT,GAAyD,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAClD,OACI,eAACC,EAAA,EAAD,wBACeH,EADf,KAC0BC,EAD1B,KACkCC,KCD3B,SAASE,EAAT,GAA6C,IAAnBC,EAAkB,EAAlBA,QACrC,OACI,eAACb,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAK,UAAKW,EAAQC,UAAb,YAA0BD,EAAQE,SAAlC,OAGT,cAACV,EAAA,EAAD,UACI,cAACE,EAAD,CAAeC,QAASK,EAAQL,QAASC,KAAMI,EAAQJ,KAAMC,QAASG,EAAQH,eCT/E,SAASM,EAAeC,GACnC,OACI,cAACL,EAAD,CAAiBC,QAASI,EAAMC,OAAOL,UCFhC,SAASM,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,QACtC,OACI,cAACpB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,MAAK,UAAKkB,EAAQ/E,MAClB8D,UAAWiB,EAAQC,gBCJpB,SAASC,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,WACzC,OACI,eAACvB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAK,qBAAgBqB,EAAWtE,MAGpC,eAACoD,EAAA,EAAD,2BACkBkB,EAAWC,cCT1B,SAASC,EAAT,GAAwD,IAAxBC,EAAuB,EAAvBA,aAC3C,OACI,eAAC1B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAK,yBAAoBwB,EAAa5E,OACtCqD,UAAWuB,EAAaC,WAE5B,cAACtB,EAAA,EAAD,UACI,eAACM,EAAA,EAAD,qBACYe,EAAaE,UACrB,uBAFJ,aAGeF,EAAaG,iBACxB,uBAJJ,2BAK6BH,EAAaI,UAAY,MAAQ,cCb/D,SAASC,EAAT,GAA4D,IAA1BC,EAAyB,EAAzBA,eAC7C,OACI,eAAChC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAO,oBAAsB8B,EAAelF,MAC5CqD,UAAW6B,EAAeC,OAE9B,cAAC5B,EAAA,EAAD,UACI,eAACM,EAAA,EAAD,qBACYqB,EAAeE,kBCa3C,IAAMC,EAAiB,CAAC,ITGpB,aAAe,oBACX,IACIC,EAAQC,EACRC,EAAYC,EAFVC,EAAQpG,KAGRqG,EAAQ,CACVC,QAAS,IAAIC,SAEXC,EAAajE,SAASC,cAAc,OAmC1C,SAASiE,EAAa5D,EAAQ6D,EAAOC,GAEjC,GAAI9D,EAAOQ,cAAe,CACtBR,EAAO+D,eAAeR,EAAOM,EAAOC,GACpCrD,EAAQuD,sBAAsBhE,EAAOiE,aACrCxD,EAAQyD,aAAavD,GACrB,IAAMlB,EAAUO,EAAOP,QACnB,SAAS0E,KAAKC,UAAUC,QAGxB5E,EAAQG,MAAM0E,UAAY,kCAAoCC,KAAKC,MAAM/D,EAAQgE,EAAIpB,EAAaA,GAAc,MAAQkB,KAAKC,OAAO/D,EAAQiE,EAAIpB,EAAcA,GAAe,MAI7K7D,EAAQG,MAAM0E,UAAY,mCAAqC7D,EAAQgE,EAAIpB,EAAaA,GAAc,QAAU5C,EAAQiE,EAAIpB,EAAcA,GAAe,MAI7J7D,EAAQG,MAAM+E,QAAU3E,EAAO4E,SAAWnE,EAAQoE,IAAM,GAAKpE,EAAQoE,GAAK,EAAI,GAAK,OACnF,IAAMC,EAAa,CACfC,wBAAyBC,EAAqBlB,EAAQ9D,IAE1DwD,EAAMC,QAAQwB,IAAIjF,EAAQ8E,GAEtBrF,EAAQS,aAAeyD,GACvBA,EAAWuB,YAAYzF,GAE3BO,EAAOmF,cAAc5B,EAAOM,EAAOC,GAGvC,IAAK,IAAI5E,EAAI,EAAGkG,EAAIpF,EAAOqF,SAAS5H,OAAQyB,EAAIkG,EAAGlG,IAC/C0E,EAAa5D,EAAOqF,SAASnG,GAAI2E,EAAOC,GAKhD,SAASkB,EAAqBM,EAASC,GAGnC,OAFA3E,EAAGoD,sBAAsBsB,EAAQrB,aACjCpD,EAAGmD,sBAAsBuB,EAAQtB,aAC1BrD,EAAG4E,kBAAkB3E,GAzEhC8C,EAAW/D,MAAM6F,SAAW,SAC5BtI,KAAKwG,WAAaA,EAClBxG,KAAKuI,QAAU,WACX,MAAO,CACHC,MAAOxC,EACPyC,OAAQxC,IAIhBjG,KAAK0I,OAAS,SAAShC,EAAOC,IAED,IAArBD,EAAMiC,YACNjC,EAAMkC,oBAEY,OAAlBjC,EAAOkC,QACPlC,EAAOiC,oBAGXrF,EAAYuF,KAAKnC,EAAOoC,oBACxBvF,EAAsBwF,iBAAiBrC,EAAOsC,iBAAkB1F,GAChEkD,EAAaC,EAAOA,EAAOC,GAoE/B,SAAgBD,GAQZ,IAPA,IAAMwC,EAZV,SAA0BxC,GACtB,IAAMyC,EAAS,GAMf,OALAzC,EAAM9D,UAAS,SAASC,GAChBA,EAAOQ,eACP8F,EAAO1I,KAAKoC,MAGbsG,EAKQC,CAAiB1C,GAAO2C,MAAK,SAASC,EAAGC,GAGpD,OAFkBlD,EAAMC,QAAQkD,IAAIF,GAAG1B,wBACrBvB,EAAMC,QAAQkD,IAAID,GAAG3B,2BAGrC6B,EAAOP,EAAO5I,OAEXyB,EAAI,EAAGkG,EAAIiB,EAAO5I,OAAQyB,EAAIkG,EAAGlG,IACtCmH,EAAOnH,GAAGO,QAAQG,MAAMiH,OAASD,EAAO1H,EA5E5C4H,CAAOjD,IAIX1G,KAAK4J,QAAU,SAASpB,EAAOC,GAG3BvC,GAFAF,EAASwC,GAEa,EACtBrC,GAFAF,EAAUwC,GAEc,EACxBjC,EAAW/D,MAAM+F,MAAQA,EAAQ,KACjChC,EAAW/D,MAAMgG,OAASA,EAAS,QS/BzCoB,EAAC,eAAQC,GACT3H,EAAIzC,EAAMqK,GAAGF,EAAEvD,QAVA,CAInBtB,QAAS,CACPgF,eAAgB,aA8FLC,MAjEf,WACE,IAAMC,EAAI/H,EAAEgI,UACZC,QAAQC,IAAIH,GACZ,IACMI,EAAQC,mBAkBd,OAhBAC,qBAAU,WAERF,EAAMG,QAASC,eAAe,CAAEhD,EAHjB,MAMf,IAAIiD,EAAQ,EACZC,aAAY,WAEVN,EAAMG,QAASC,eAAe,CAC5BpD,EAVW,IAUGF,KAAKyD,IAAIF,GACvBjD,EAXW,IAWGN,KAAK0D,IAAIH,KAEzBA,GAASvD,KAAK2D,GAAK,MAClB,MACF,IAGD,8BAIE,cAAC,IAAD,CACEC,IAAKV,EAELvE,eAAgBA,EAChBkF,UAAW,SAAAf,GAET,IAzEWgB,EAyELtK,EAAOsJ,EAAEtJ,KACTuK,EAvDS,SAACvK,GACxB,OAAQA,EAAKS,SACX,IAAK,WACH,OAAO,cAACsC,EAAD,CAAkBpB,SAAU3B,IACrC,IAAK,UACH,OAAO,cAAC4D,EAAD,CAAiBC,QAAS7D,IACnC,IAAK,SACH,OAAO,cAACgE,EAAD,CAAgBE,OAAQlE,IACjC,IAAK,UACH,OAAO,cAACmE,EAAD,CAAiBC,QAASpE,IACnC,IAAK,aACH,OAAO,cAACsE,EAAD,CAAoBC,WAAYvE,IACzC,IAAK,UACH,OAAO,cAACyE,EAAD,CAAsBC,aAAc1E,IAC7C,IAAK,iBACH,OAAO,cAAC+E,EAAD,CAAwBC,eAAgBhF,IACjD,QACE,QAsCiBwK,CAAiBxK,GAC9B,GAAIuK,EACF,OA5ESD,EA4EUC,EA3EtBE,IAAeC,qBAAqBJ,GA6EnC,IACE,OAAOK,KAAKC,UAAU5K,GACtB,MAAOiJ,GACP,MAAO,kBAGX4B,UAAWvB,EACXwB,gBAAgB,QAchBC,uBAAuB,OCjHhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS3D,OACP,cAAC,IAAM4D,WAAP,UACE,cAAC,EAAD,MAEF/J,SAASgK,eAAe,SAM1BX,K","file":"static/js/main.f5216f08.chunk.js","sourcesContent":["\nexport const POINTER_TOKEN = '@';\nexport const REPO_TOKEN = '<!n>';\n\n\nexport const isPointer = (s: any[] | string) => typeof s === 'string' && s[0] === POINTER_TOKEN;\n\ntype IncomingData<T> = {\n    schema: any;\n    objects: any;\n    repos: T;\n}\n\nexport default class Graph<R> {\n    graph: any;\n    repos: R;\n    repoMap: any;\n    infos: any;\n    schema: any;\n    constructor() {\n        this.graph = {};\n        //@ts-ignore\n        this.repos = {};\n        this.infos = {};\n        this.schema = {};\n        this.repoMap = {};\n    }\n\n    /**\n     * @param {object} data\n     * @returns {Graph}\n     */\n    addParsedJSON = (data: IncomingData<R>) => {\n        // don't need to apply checks, it comes from an automated serializer\n        this.schema = data.schema;\n        // merging data\n        this.graph = { ...this.graph, ...data.objects };\n\n        // creating repos if they don't already exists\n        Object.keys(data.repos).forEach(name => {\n            if (!Object.keys(this.repos).includes(name)) {\n                //@ts-ignore\n                this.repos[name] = [];\n            }\n        });\n\n        // binding all objects\n        Object.keys(data.objects).forEach(e => this.bindObject(data.objects[e], e));\n\n        // binding repos with real names\n        // this way we can avoid rebinding everything\n        //@ts-ignore\n        Object.keys(this.schema).forEach(k => this.repos[this.schema[k]] = this.repos[k]);\n        return this;\n    }\n\n    /**\n     * @param {string} data\n     * @returns {Graph}\n     */\n    addJSON = (data: string) => this.addParsedJSON(JSON.parse(data));\n\n    // @ts-private\n    /**\n     * @param {Object} obj\n     * @param {string} key\n     * @returns {void}\n     */\n    private addToRepo = (obj: any, key: string): void => {\n        // we prevent data duplication, while keeping arrays for faster access\n        if (Object.keys(this.infos).includes(key)) {\n            //@ts-ignore\n            this.repos[obj[REPO_TOKEN]][this.infos[key]] = obj;\n        } else {\n            // console.log(this.repos);\n            //@ts-ignore\n            this.infos[key] = this.repos[obj[REPO_TOKEN]].length;\n            //@ts-ignore\n            this.repos[obj[REPO_TOKEN]].push(obj);\n        }\n    }\n\n    // @ts-private\n    /**\n     * @param {Object} obj\n     * @param {string} key\n     * @returns {void}\n     */\n    private bindObject = (obj: any, key: string): void => {\n        Object.keys(obj).forEach(k => {\n            const val = obj[k];\n\n            if (isPointer(k)) {\n                const newKey = k.slice(1);\n\n                if (typeof val === 'string') {\n                    obj[newKey] = this.graph[val];\n                    delete obj[k];\n                    return;\n                }\n\n                if (val === null) {\n                    obj[newKey] = val;\n                    delete obj[k];\n                    return;\n                }\n\n                // if is Array then bind array\n                // if dict then bind dict\n                // if single value then bind one value\n                // binding arrays\n                if (Array.isArray(val) && val.length) {\n                    obj[newKey] = val.map(i => this.graph[i]);\n                    delete obj[k];\n                    return;\n                }\n\n\n                // we already checked all the other types\n                // so now we have to do the next steps for a map\n                Object.keys(val).forEach(k => {\n                    val[k] = this.graph[val[k]];\n                    // delete\n                });\n                obj[newKey] = val;\n                delete obj[k];\n            }\n        });\n        this.addToRepo(obj, key);\n    };\n}\n","import { isPointer, REPO_TOKEN } from \"./graph\";\nimport { Link, Node } from \"./graphMaker\";\n\n\nexport default class Graph {\n    graph: any\n    nodes: Node[];\n    links: Link[];\n    private rules: any;\n\n    private groups: { [key: string]: number };\n    constructor(rules: any) {\n        this.graph = {};\n        this.nodes = [];\n        this.links = [];\n        this.groups = {};\n        this.rules = rules;\n    }\n\n    public getData() {\n        return {\n            links: this.links,\n            nodes: this.nodes\n        };\n    }\n\n    public static of(data: any, rules?: any){\n        const g = new Graph(rules || {});\n        g.addData(data)\n        return g;\n    }\n\n    private getGroupNumberForName(name: string) {\n        const keys = Object.keys(this.groups);\n        if (keys.includes(name)) {\n            return this.groups[name];\n        } else {\n            const newNumber = keys.length + 1;\n            this.groups[name] = newNumber;\n            return newNumber;\n        }\n    }\n\n    private newLink(source: string, target: string) {\n        this.links.push({ source, target, value: 1 });\n    }\n\n    private newNode(name: string, group: string, data: any) {\n        this.nodes.push({ id: name, group: this.getGroupNumberForName(group), data });\n    }\n\n\n    public addData(objs: any) {\n        const nodeToRemove: string[] = [];\n        Object.keys(objs).forEach(k1 => {\n            const obj = objs[k1];\n            const currentType = obj[REPO_TOKEN];\n            Object.keys(obj).forEach(k => {\n                const val = obj[k];\n\n                if (isPointer(k)) {\n                    const newKey = k.slice(1);\n\n                    if (typeof val === 'string') {\n                        const target = objs[val];\n                        const targetType = target[REPO_TOKEN];\n                        if (Object.keys(this.rules).includes(currentType)) {\n                            const settingsForThis = this.rules[currentType];\n                            // console.log('current', obj, currentType, val);\n                            // console.log('target', target, targetType);\n                            if (Object.keys(settingsForThis).includes(targetType)) {\n                                const func = settingsForThis[targetType];\n                                if (func === \"combine\") {\n                                    obj[newKey] = target;\n                                    nodeToRemove.push(val);\n                                    // console.log('pushing');\n                                    delete obj[k];\n                                }\n                            } else {\n                                obj[newKey] = val;\n                                this.newLink(k1, val);\n                                delete obj[k];\n                            }\n                        } else {\n                            obj[newKey] = target;\n                            this.newLink(k1, val);\n                            delete obj[k];\n                        }\n                        return;\n                    }\n\n                    if (val === null) {\n                        obj[newKey] = val;\n                        delete obj[k];\n                        return;\n                    }\n\n                    if (Array.isArray(val) && val.length) {\n                        val.forEach(i => this.newLink(k1, i));\n                        delete obj[k];\n                        return;\n                    }\n                }\n                // add node to nodes\n            });\n            this.newNode(k1, obj[REPO_TOKEN], obj);\n        });\n        this.nodes = this.nodes.filter(n => !nodeToRemove.includes(n.id));\n    }\n}\n\n","import * as THREE from 'three';\n\n\nexport class CSS2DObject extends THREE.Object3D {\n    constructor(element) {\n        super();\n        this.element = element || document.createElement('div');\n        this.element.style.position = 'absolute';\n        this.addEventListener('removed', () => {\n            this.traverse((object) => {\n                if (object.element instanceof Element && object.element.parentNode !== null) {\n                    object.element.parentNode.removeChild(object.element);\n                }\n            });\n        });\n    }\n\n    copy(source, recursive) {\n        super.copy(source, recursive);\n        this.element = source.element.cloneNode(true);\n        return this;\n    }\n\n}\n\nCSS2DObject.prototype.isCSS2DObject = true; //\n\nconst _vector = new THREE.Vector3();\nconst _viewMatrix = new THREE.Matrix4();\nconst _viewProjectionMatrix = new THREE.Matrix4();\nconst _a = new THREE.Vector3();\nconst _b = new THREE.Vector3();\n\nexport class CSS2DRenderer {\n\n    constructor() {\n        const _this = this;\n        let _width, _height;\n        let _widthHalf, _heightHalf;\n        const cache = {\n            objects: new WeakMap()\n        };\n        const domElement = document.createElement('div');\n        domElement.style.overflow = 'hidden';\n        this.domElement = domElement;\n        this.getSize = function() {\n            return {\n                width: _width,\n                height: _height\n            };\n        };\n\n        this.render = function(scene, camera) {\n\n            if (scene.autoUpdate === true) {\n                scene.updateMatrixWorld();\n            }\n            if (camera.parent === null) {\n                camera.updateMatrixWorld();\n            }\n\n            _viewMatrix.copy(camera.matrixWorldInverse);\n            _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n            renderObject(scene, scene, camera);\n            zOrder(scene);\n\n        };\n\n        this.setSize = function(width, height) {\n            _width = width;\n            _height = height;\n            _widthHalf = _width / 2;\n            _heightHalf = _height / 2;\n            domElement.style.width = width + 'px';\n            domElement.style.height = height + 'px';\n        };\n\n        function renderObject(object, scene, camera) {\n\n            if (object.isCSS2DObject) {\n                object.onBeforeRender(_this, scene, camera);\n                _vector.setFromMatrixPosition(object.matrixWorld);\n                _vector.applyMatrix4(_viewProjectionMatrix);\n                const element = object.element;\n                if (/apple/i.test(navigator.vendor)) {\n\n                    // https://github.com/mrdoob/three.js/issues/21415\n                    element.style.transform = 'translate(-50%,-50%) translate(' + Math.round(_vector.x * _widthHalf + _widthHalf) + 'px,' + Math.round(-_vector.y * _heightHalf + _heightHalf) + 'px)';\n\n                } else {\n\n                    element.style.transform = 'translate(-50%,-50%) translate(' + (_vector.x * _widthHalf + _widthHalf) + 'px,' + (-_vector.y * _heightHalf + _heightHalf) + 'px)';\n\n                }\n\n                element.style.display = object.visible && _vector.z >= -1 && _vector.z <= 1 ? '' : 'none';\n                const objectData = {\n                    distanceToCameraSquared: getDistanceToSquared(camera, object)\n                };\n                cache.objects.set(object, objectData);\n\n                if (element.parentNode !== domElement) {\n                    domElement.appendChild(element);\n                }\n                object.onAfterRender(_this, scene, camera);\n            }\n\n            for (let i = 0, l = object.children.length; i < l; i++) {\n                renderObject(object.children[i], scene, camera);\n            }\n\n        }\n\n        function getDistanceToSquared(object1, object2) {\n            _a.setFromMatrixPosition(object1.matrixWorld);\n            _b.setFromMatrixPosition(object2.matrixWorld);\n            return _a.distanceToSquared(_b);\n\n        }\n\n        function filterAndFlatten(scene) {\n            const result = [];\n            scene.traverse(function(object) {\n                if (object.isCSS2DObject) {\n                    result.push(object);\n                }\n            });\n            return result;\n\n        }\n\n        function zOrder(scene) {\n            const sorted = filterAndFlatten(scene).sort(function(a, b) {\n                const distanceA = cache.objects.get(a).distanceToCameraSquared;\n                const distanceB = cache.objects.get(b).distanceToCameraSquared;\n                return distanceA - distanceB;\n            });\n            const zMax = sorted.length;\n\n            for (let i = 0, l = sorted.length; i < l; i++) {\n                sorted[i].element.style.zIndex = zMax - i;\n            }\n\n        }\n\n    }\n\n}","import { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Document } from \"../data/document/type\";\n\n\ntype Props = {\n    document: Document;\n}\n\nexport default function DocumentRenderer({ document }: Props) {\n    return (\n        <Card>\n            <CardHeader \n                title={\"Document: \" + document.id} \n                subheader={document.type.value} \n            />\n            <CardContent>\n                Signé le : {document.signedAt}\n            </CardContent>\n        </Card>\n    )\n}","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\ntype Props = {\n    address: string;\n    city: string;\n    zipCode: string;\n}\n\nexport default function AdressDetails({address, city, zipCode}: Props) {\n    return (\n        <Typography>\n            Addresse: {address}, {city}, {zipCode}\n        </Typography>\n    );\n}","import { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Document } from \"../data/document/type\";\nimport { Student } from \"../data/student/type\";\nimport AdressDetails from \"./addressDetails\";\n\n\ntype Props = {\n    student: Student;\n}\n\nexport default function StudentRendere({ student }: Props) {\n    return (\n        <Card>\n            <CardHeader \n                title={`${student.firstName} ${student.lastName} `} \n                // subheader={document.type.value} \n            />\n            <CardContent>\n                <AdressDetails address={student.address} city={student.city} zipCode={student.zipCode} />\n            </CardContent>\n        </Card>\n    )\n}","import { Card, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Member } from \"../data/member/type\";\nimport StudentRenderer from \"./StudentRenderer\";\n\n\ntype Props = {\n    member: Member;\n}\n\nexport default function MemberRenderer(props: Props) {\n    return (\n        <StudentRenderer student={props.member.student} />\n    )\n}","import { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Mission } from \"../data/mission/type\";\n\n\n\ntype Props = {\n    mission: Mission;\n}\n\nexport default function MissionRenderer({ mission }: Props) {\n    return (\n        <Card>\n            <CardHeader \n                title={`${mission.name}`} \n                subheader={mission.description} \n            />\n            {/* <CardContent>\n                Addresse: {student.address}\n            </CardContent> */}\n        </Card>\n    )\n}","import { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Mission } from \"../data/mission/type\";\nimport { Validation } from \"../data/validation/type\";\n\n\n\ntype Props = {\n    validation: Validation;\n}\n\nexport default function ValidationRenderer({ validation }: Props) {\n    return (\n        <Card>\n            <CardHeader \n                title={`Validation ${validation.id}`} \n                // subheader={mission.description} \n            />\n            <CardContent>\n                Commentaire: {validation.comment}\n            </CardContent>\n        </Card>\n    )\n}","import { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { DocumentType } from \"../data/document-type/type\";\nimport { Document } from \"../data/document/type\";\n\n\ntype Props = {\n    documentType: DocumentType;\n}\n\nexport default function DocumentTypeRenderer({ documentType }: Props) {\n    return (\n        <Card>\n            <CardHeader\n                title={`Document-type: ${documentType.value}`}\n                subheader={documentType.subValue}\n            />\n            <CardContent>\n                <Typography>\n                    Type : {documentType.extension}\n                    <br />\n                    Pattern : {documentType.referencePattern}\n                    <br />\n                    Requiert une siganture: {documentType.signature ? \"Oui\" : \"Non\"}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}","import { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Document } from \"../data/document/type\";\nimport { ValidationType } from \"../data/validation-type/type\";\n\n\ntype Props = {\n    validationType: ValidationType;\n}\n\nexport default function ValidationTypeRenderer({ validationType }: Props) {\n    return (\n        <Card>\n            <CardHeader \n                title={\"Validation-type: \" + validationType.value} \n                subheader={validationType.role} \n            />\n            <CardContent>\n                <Typography>\n                    Alias: {validationType.mailAlias}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}","// @ts-ignore\nimport { Avatar, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n// @ts-ignore\nimport ReactDOMServer from 'react-dom/server';\nimport { ForceGraph3D, ForceGraph2D, ForceGraphVR } from 'react-force-graph';\nimport './App.css';\nimport data, { Jisep2020 } from './data';\nimport Graph from \"./graphV2\";\nimport { normalizedData } from \"./phoenix_data\";\n// @ts-ignore\nimport { CSS2DObject, CSS2DRenderer } from './renderer';\nimport DATA from './d7.json';\nimport { REPO_TOKEN } from \"./graph\";\nimport DocumentRenderer from \"./renderers/DocumentRenderer\";\nimport StudentRenderer from \"./renderers/StudentRenderer\";\nimport MemberRenderer from \"./renderers/MemberRenderer\";\nimport MissionRenderer from \"./renderers/MissionRenderer\";\nimport ValidationRenderer from \"./renderers/Validation\";\nimport DocumentTypeRenderer from \"./renderers/DocumentTypeRenderer\";\nimport ValidationTypeRenderer from \"./renderers/ValidationTypeRenderer\";\n\nfunction JSXTo2D(elem: JSX.Element) {\n  const nodeEl = document.createElement('div');\n  nodeEl.innerHTML = ReactDOMServer.renderToStaticMarkup(elem);\n  return new CSS2DObject(nodeEl);\n}\n\nfunction JSXToString(elem: JSX.Element) {\n  return ReactDOMServer.renderToStaticMarkup(elem);\n}\n\nconst extraRenderers = [new CSS2DRenderer()];\n\nconst phoenixRules = {\n  // member: {\n  //   student: \"combine\"\n  // },\n  mission: {\n    missionOrigins: \"combine\"\n  }\n};\n\nconst e = { ...DATA };\nconst g = Graph.of(e.objects, phoenixRules);\n\n\nconst getHoverRenderer = (data: any) => {\n  switch (data[REPO_TOKEN]) {\n    case \"document\":\n      return <DocumentRenderer document={data} />;\n    case \"student\":\n      return <StudentRenderer student={data} />;\n    case \"member\":\n      return <MemberRenderer member={data} />;\n    case \"mission\":\n      return <MissionRenderer mission={data} />;\n    case \"validation\":\n      return <ValidationRenderer validation={data} />;\n    case \"docType\":\n      return <DocumentTypeRenderer documentType={data} />;\n    case \"validationType\":\n      return <ValidationTypeRenderer validationType={data} />\n    default:\n      return undefined;\n  }\n}\n\nfunction App() {\n  const d = g.getData();\n  console.log(d);\n  const missionName = \"Battistelli 6\";\n  const fgRef = useRef();\n  const distance = 500;\n  useEffect(() => {\n    // @ts-ignore\n    fgRef.current!.cameraPosition({ z: distance });\n\n    // camera orbit\n    let angle = 0;\n    setInterval(() => {\n      // @ts-ignore\n      fgRef.current!.cameraPosition({\n        x: distance * Math.sin(angle),\n        z: distance * Math.cos(angle)\n      });\n      angle += Math.PI / 300;\n    }, 20);\n  }, []);\n\n  return (\n    <div>\n      {/* <Typography variant=\"h1\" >\n        {missionName}\n      </Typography> */}\n      <ForceGraph3D\n        ref={fgRef}\n        // @ts-ignore\n        extraRenderers={extraRenderers}\n        nodeLabel={d => {\n          // @ts-ignore\n          const data = d.data;\n          const comp = getHoverRenderer(data);\n          if (comp) {\n            return JSXToString(comp);\n          }\n          try {\n            return JSON.stringify(data);\n          } catch (e) {\n            return \"circular data\";\n          }\n        }}\n        graphData={d}\n        nodeAutoColorBy=\"group\"\n        //@ts-ignore\n        // nodeThreeObject={(node: any) => {\n        //   // console.log(node);\n        //   return JSXTo2D(\n        //     <div style={{ color: node.color }} >\n        //       <Avatar\n        //         src={node.data.img}\n        //       >\n        //         {node.id}\n        //       </Avatar>\n        //     </div>\n        //   )\n        // }}\n        nodeThreeObjectExtend={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}